---
- name: Download repo key
  when: kubectl_from_repository
  shell:
    cmd: "curl -sSL 'https://packages.cloud.google.com/apt/doc/apt-key.gpg' | gpg --dearmor --output {{ kubectl_keyring }}"
    creates: "{{ kubectl_keyring }}"
  tags:
    - kubectl

- name: Add apt repository
  when: kubectl_from_repository
  apt_repository:
    repo: deb [signed-by={{ kubectl_keyring }}] http://apt.kubernetes.io/ kubernetes-xenial main
    filename: kubernetes
    update_cache: True
    state: present
  tags:
    - kubectl

- name: Pin package version
  when:
    - kubectl_from_repository
    - kubectl_fixed_version
  copy:
    content: |
      Explantion: Pin added by kubectl role
      Package: kubectl
      Pin: version {{ kubectl_version }}*
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/kubectl
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - kubectl

- name: Install required packages
  loop: "{{ ['kubectl', 'socat'] if kubectl_from_repository else ['socat'] }}"
  package:
    name: "{{ item }}"
    state: present
  tags:
    - kubectl

- name: Download release tarball
  when: not kubectl_from_repository
  get_url:
    url: '{{ kubectl_download }}'
    checksum: '{{ kubectl_checksum }}'
    dest: /usr/bin/kubectl
    mode: u=rwx,g=rx,o=rx
  tags:
    - kubectl

- name: Download ctx plugin
  get_url:
    url: '{{ kubectl_ctx_download }}'
    checksum: '{{ kubectl_ctx_checksum }}'
    dest: /usr/bin/kubectl-ctx
    mode: u=rwx,g=rx,o=rx
  tags:
    - kubectl

- name: Download ns plugin
  get_url:
    url: '{{ kubectl_ns_download }}'
    checksum: '{{ kubectl_ns_checksum }}'
    dest: /usr/bin/kubectl-ns
    mode: u=rwx,g=rx,o=rx
  tags:
    - kubectl

- name: Create kubeconfig directories
  loop: "{{ kubectl_general_configs + kubectl_extra_configs }}"
  loop_control:
    label: "{{ item.name }}"
  file:
    path: "{{ item.path | dirname }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('u=rwx,g=rx,o=') }}"
    state: directory
  tags:
    - kubectl

- name: Create kubeconfig files
  when: item.state | default('present') == 'present'
  loop: "{{ kubectl_general_configs + kubectl_extra_configs }}"
  loop_control:
    label: "{{ item.name }}"
  template:
    src: kubeconfig.j2
    dest: "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('u=rwx,g=rx,o=') }}"
  tags:
    - kubectl

- name: Remove kubeconfig files
  when: item.state | default('present') == 'absent'
  file:
    path: "{{ item.path }}"
    state: absent
  tags:
    - kubectl

- name: Write profile script
  template:
    src: profile.j2
    dest: /etc/profile.d/kubectl.sh
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - kubectl

...
